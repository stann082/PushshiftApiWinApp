<?xml version="1.0" encoding="utf-8"?>
<project name="credit_card_statement_processor" default="build" basedir=".">

    <!-- **************************************************************** -->
    <!-- Properties                                                       -->
    <!-- **************************************************************** -->

    <property name="project.dir" value="${project::get-base-directory()}" />
    <property name="project.name" value="${project::get-name()}" />

    <property name="dotnet.filename" value="dotnet" />

    <property name="src.dir" value="${project.dir}/src" />
    <property name="tst.dir" value="${project.dir}/tst" />
    <property name="rpr.dir" value="${tst.dir}/rpr" />

    <property name="etc.dir" value="${project.dir}/etc" />
    <property name="conf.dir" value="${etc.dir}/conf" />
    <property name="inc.dir" value="${etc.dir}/inc" />
    <property name="include.filename" value="${inc.dir}/property-overrides.include" />

    <property name="stg.dir" value="C:/apps/PushshiftAPI" />

        <!-- Include properties from file (properties immutable after defined) -->
    <if test="${file::exists(include.filename)}">
        <include buildfile="${include.filename}" />
    </if>

    <if test="${not property::exists('dotnet.configuration')}">
        <property name="dotnet.configuration" value="Release" />
    </if>
    <if test="${not property::exists('dotnet.version.dir')}">
        <property name="dotnet.version.dir" value="net5.0-windows" />
    </if>

    <!-- **************************************************************** -->
    <!-- Public tasks                                                     -->
    <!-- **************************************************************** -->

    <!-- Clean up the project component(s) -->
    <target name="clean">
        <call target="__local-clean" />
        <call target="__clean-components" />
    </target>

    <!-- Run the coverage report -->
    <target name="cover">
        <call target="__execute-domain-test-coverage" />
        <call target="__execute-presentation-test-coverage" />
        <call target="__execute-service-test-coverage" />
        <call target="__merge-dotcover-files" />
        <call target="__generate-coverage-report" />
    </target>

    <!-- Build the project component(s) -->
    <target name="build">
        <call target="__build-components" />
    </target>

    <!-- Distribute the project component(s) (to the stage directory) -->
    <target name="dist">
        <call target="__stage-applications" />
    </target>

    <!-- Restore the project component(s) -->
    <target name="restore">
        <call target="__restore-components" />
    </target>

    <!-- Generate static code analysis report -->
    <target name="sonar">
        <call target="__execute-sonarqube-report" />
    </target>

    <!-- Test the project component(s) -->
    <target name="test">
        <call target="__test-nunit" />
    </target>

    <!-- **************************************************************** -->
    <!-- Private filesets (useful for sharing fileset definitions)        -->
    <!-- NOTE: fileset contents are determined each time they're included -->
    <!-- **************************************************************** -->

    <patternset id="application-includes.patternset">
        <include name="**/*" />
        <exclude name="*.pdb" />
    </patternset>

    <fileset id="test-build.fileset" basedir=".">
        <include name="${project.dir}/PushshiftAPI.sln" />
    </fileset>

    <!-- *********************************************** -->
    <!-- Private tasks (useful for individual execution) -->
    <!-- *********************************************** -->

    <target name="__build-components">
        <property name="action" value="build" />
        <property name="dotnet.verbosity" value="quiet" />
        <call target="__dotnet-action" />
    </target>

    <target name="__clean-components">
        <property name="action" value="clean" />
        <property name="dotnet.verbosity" value="quiet" />
        <call target="__dotnet-action" />
    </target>

    <target name="__dotnet-action">
        <foreach item="File" property="buildfile">
            <in>
                <items refid="test-build.fileset" />
            </in>
            <do>
                <property name="buildfile.dir" value="${path::get-directory-name(buildfile)}" />
                <property name="buildfile.name" value="${path::get-file-name(buildfile)}" />
                <echo />
                <echo message="Auto-${action} ${buildfile}..." />
                <echo />
                <exec workingdir="${buildfile.dir}" program="${dotnet.filename}">
                    <arg value="${action}" />
                    <arg value="${buildfile.name}" />
                    <arg value="--configuration" unless="${action=='restore'}" />
                    <arg value="${dotnet.configuration}" unless="${action=='restore'}" />
                    <arg value="--verbosity" />
                    <arg value="${dotnet.verbosity}" />
                </exec>
            </do>
        </foreach>
    </target>

    <target name="__execute-domain-test-coverage">
        <property name="tst-unit.dir" value="${tst.dir}/DomainTest" />
        <call target="__execute-test-coverage" />
    </target>

    <target name="__execute-presentation-test-coverage">
        <property name="tst-unit.dir" value="${tst.dir}/PresentationTest" />
        <call target="__execute-test-coverage" />
    </target>

    <target name="__execute-service-test-coverage">
        <property name="tst-unit.dir" value="${tst.dir}/ServiceTest" />
        <call target="__execute-test-coverage" />
    </target>

    <target name="__execute-sonarqube-report">
        <call target="__clean-components" />
        <call target="__restore-components" />

        <exec program="${dotnet.filename}">
            <arg value="sonarscanner"/>
            <arg value="begin"/>
            <arg value='/k:"PushshiftAPI"'/>
            <arg value='/s:${conf.dir}/sonar-config.xml'/>
        </exec>

        <call target="__build-components" />
        <call target="cover" failonerror="false" />

        <exec program="${dotnet.filename}">
            <arg value="sonarscanner"/>
            <arg value="end"/>
        </exec>
    </target>

    <target name="__execute-test-coverage">
        <exec workingdir="${tst-unit.dir}" program="${dotnet.filename}">
            <arg value="dotcover"/>
            <arg value="test"/>
            <arg value='--dcXML="coverage.xml"'/>
        </exec>
    </target>

    <target name="__generate-coverage-report">
        <exec program="dotcover">
            <arg value="r"/>
            <arg value="${tst.dir}/report.xml"/>
        </exec>
    </target>

    <target name="__local-clean">
        <delete>
            <fileset basedir="${rpr.dir}">
                <include name="**/*" />
            </fileset>
        </delete>
    </target>

    <target name="__merge-dotcover-files">
        <exec program="dotcover">
            <arg value="m"/>
            <arg value="${tst.dir}/merge.xml"/>
        </exec>
    </target>

    <target name="__restore-components">
        <property name="action" value="restore" />
        <property name="dotnet.verbosity" value="quiet" />
        <call target="__dotnet-action" />
    </target>

    <target name="__stage-applications">
        <mkdir dir="${stg.dir}" />
        <property name="pushshift-api.dir" value="${src.dir}/PushshiftAPI/bin/${dotnet.configuration}/${dotnet.version.dir}" />
        <copy todir="${stg.dir}">
            <fileset basedir="${pushshift-api.dir}">
                <patternset refid="application-includes.patternset" />
            </fileset>
        </copy>
    </target>

    <target name="__test-nunit">
        <property name="action" value="test" />
        <property name="dotnet.verbosity" value="minimal" />
        <call target="__dotnet-action" />
    </target>

</project>

